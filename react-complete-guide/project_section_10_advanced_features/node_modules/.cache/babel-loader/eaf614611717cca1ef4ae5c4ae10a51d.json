{"ast":null,"code":"var _jsxFileName = \"/Users/patrycjakierejewska/Documents/GitHub/react-course-udemy/react-complete-guide/project_section_10_advanced_features/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === \"USER_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //     emailState.isValid && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    }); // setFormIsValid(\n    //     emailState.isValid && passwordState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {} else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"jcEGMj6Jqz+PHB24OVBoZ5xfujE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/patrycjakierejewska/Documents/GitHub/react-course-udemy/react-complete-guide/project_section_10_advanced_features/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","authCtx","emailInputRef","passwordInputRef","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":"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","sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useReducer,\n    useContext,\n    useRef\n} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return {\n            value: action.val,\n            isValid: action.val.includes('@'),\n        };\n    }\n    if (action.type === 'INPUT_BLUR') {\n        return {\n            value: state.value,\n            isValid: state.value.includes('@'),\n        }\n    }\n    return {\n        value: '',\n        isValid: false,\n    };\n};\n\nconst passwordReducer = (state, action) => {\n    if (action.type === \"USER_INPUT\") {\n        return {\n            value: action.val,\n            isValid: action.val.trim().length > 6,\n        };\n    }\n    if (action.type === \"USER_BLUR\") {\n        return {\n            value: state.value,\n            isValid: state.value.trim().length > 6,\n        };\n    }\n    return {\n        value: '',\n        isValid: false,\n    };\n};\n\nconst Login = (props) => {\n    // const [enteredEmail, setEnteredEmail] = useState('');\n    // const [emailIsValid, setEmailIsValid] = useState();\n    // const [enteredPassword, setEnteredPassword] = useState('');\n    // const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {value: '', isValid: false,});\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {value: '', isValid: false,});\n\n    const {isValid: emailIsValid} = emailState;\n    const {isValid: passwordIsValid} = passwordState;\n\n    const authCtx = useContext(AuthContext);\n\n    const emailInputRef = useRef();\n    const passwordInputRef = useRef();\n\n    useEffect(() => {\n        const identifier = setTimeout(() => {\n            setFormIsValid(emailIsValid && passwordIsValid);\n        }, 500);\n\n        return () => {\n            clearTimeout(identifier);\n        };\n    }, [emailIsValid, passwordIsValid]);\n\n    const emailChangeHandler = (event) => {\n        dispatchEmail({type: 'USER_INPUT', val: event.target.value,});\n\n        // setFormIsValid(\n        //     emailState.isValid && passwordState.isValid\n        // );\n    };\n\n    const passwordChangeHandler = (event) => {\n        dispatchPassword({type: \"USER_INPUT\", val: event.target.value});\n\n        // setFormIsValid(\n        //     emailState.isValid && passwordState.isValid\n        // );\n    };\n\n    const validateEmailHandler = () => {\n        dispatchEmail({type: 'INPUT_BLUR'});\n    };\n\n    const validatePasswordHandler = () => {\n        dispatchPassword({type: 'INPUT_BLUR'});\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        if (formIsValid) {\n            authCtx.onLogin(emailState.value, passwordState.value);\n        } else if (!emailIsValid) {\n\n        } else {\n\n        }\n\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <Input\n                    ref={emailInputRef}\n                    id=\"email\"\n                    label=\"E-mail\"\n                    type=\"email\"\n                    isValid={emailIsValid}\n                    value={emailState.value}\n                    onChange={emailChangeHandler}\n                    onBlur={validateEmailHandler}\n                />\n                <Input\n                    ref={passwordInputRef}\n                    id=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    isValid={passwordIsValid}\n                    value={passwordState.value}\n                    onChange={passwordChangeHandler}\n                    onBlur={validatePasswordHandler}\n                />\n                <div className={classes.actions}>\n                    <Button type=\"submit\" className={classes.btn}>\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}